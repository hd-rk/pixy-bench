// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cmd/pb/proxy.proto

package mlisa

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DataMsg struct {
	// Name of the topic to produce message to.
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Message body.
	Message              []byte   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataMsg) Reset()         { *m = DataMsg{} }
func (m *DataMsg) String() string { return proto.CompactTextString(m) }
func (*DataMsg) ProtoMessage()    {}
func (*DataMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_02ebc3212cfb52ae, []int{0}
}
func (m *DataMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataMsg.Unmarshal(m, b)
}
func (m *DataMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataMsg.Marshal(b, m, deterministic)
}
func (dst *DataMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataMsg.Merge(dst, src)
}
func (m *DataMsg) XXX_Size() int {
	return xxx_messageInfo_DataMsg.Size(m)
}
func (m *DataMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_DataMsg.DiscardUnknown(m)
}

var xxx_messageInfo_DataMsg proto.InternalMessageInfo

func (m *DataMsg) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *DataMsg) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

type DataAck struct {
	// Value success is true if the request is successful, otherwise it's false.
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataAck) Reset()         { *m = DataAck{} }
func (m *DataAck) String() string { return proto.CompactTextString(m) }
func (*DataAck) ProtoMessage()    {}
func (*DataAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_02ebc3212cfb52ae, []int{1}
}
func (m *DataAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataAck.Unmarshal(m, b)
}
func (m *DataAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataAck.Marshal(b, m, deterministic)
}
func (dst *DataAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataAck.Merge(dst, src)
}
func (m *DataAck) XXX_Size() int {
	return xxx_messageInfo_DataAck.Size(m)
}
func (m *DataAck) XXX_DiscardUnknown() {
	xxx_messageInfo_DataAck.DiscardUnknown(m)
}

var xxx_messageInfo_DataAck proto.InternalMessageInfo

func (m *DataAck) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type CtrlReq struct {
	// Types that are valid to be assigned to Payload:
	//	*CtrlReq_Init
	//	*CtrlReq_Ack
	Payload              isCtrlReq_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CtrlReq) Reset()         { *m = CtrlReq{} }
func (m *CtrlReq) String() string { return proto.CompactTextString(m) }
func (*CtrlReq) ProtoMessage()    {}
func (*CtrlReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_02ebc3212cfb52ae, []int{2}
}
func (m *CtrlReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CtrlReq.Unmarshal(m, b)
}
func (m *CtrlReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CtrlReq.Marshal(b, m, deterministic)
}
func (dst *CtrlReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CtrlReq.Merge(dst, src)
}
func (m *CtrlReq) XXX_Size() int {
	return xxx_messageInfo_CtrlReq.Size(m)
}
func (m *CtrlReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CtrlReq.DiscardUnknown(m)
}

var xxx_messageInfo_CtrlReq proto.InternalMessageInfo

type isCtrlReq_Payload interface {
	isCtrlReq_Payload()
}

type CtrlReq_Init struct {
	Init *CtrlReq_InitPayload `protobuf:"bytes,1,opt,name=init,proto3,oneof"`
}

type CtrlReq_Ack struct {
	Ack *CtrlReq_AckPayload `protobuf:"bytes,2,opt,name=ack,proto3,oneof"`
}

func (*CtrlReq_Init) isCtrlReq_Payload() {}

func (*CtrlReq_Ack) isCtrlReq_Payload() {}

func (m *CtrlReq) GetPayload() isCtrlReq_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *CtrlReq) GetInit() *CtrlReq_InitPayload {
	if x, ok := m.GetPayload().(*CtrlReq_Init); ok {
		return x.Init
	}
	return nil
}

func (m *CtrlReq) GetAck() *CtrlReq_AckPayload {
	if x, ok := m.GetPayload().(*CtrlReq_Ack); ok {
		return x.Ack
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CtrlReq) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CtrlReq_OneofMarshaler, _CtrlReq_OneofUnmarshaler, _CtrlReq_OneofSizer, []interface{}{
		(*CtrlReq_Init)(nil),
		(*CtrlReq_Ack)(nil),
	}
}

func _CtrlReq_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CtrlReq)
	// payload
	switch x := m.Payload.(type) {
	case *CtrlReq_Init:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Init); err != nil {
			return err
		}
	case *CtrlReq_Ack:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ack); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CtrlReq.Payload has unexpected type %T", x)
	}
	return nil
}

func _CtrlReq_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CtrlReq)
	switch tag {
	case 1: // payload.init
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CtrlReq_InitPayload)
		err := b.DecodeMessage(msg)
		m.Payload = &CtrlReq_Init{msg}
		return true, err
	case 2: // payload.ack
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CtrlReq_AckPayload)
		err := b.DecodeMessage(msg)
		m.Payload = &CtrlReq_Ack{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CtrlReq_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CtrlReq)
	// payload
	switch x := m.Payload.(type) {
	case *CtrlReq_Init:
		s := proto.Size(x.Init)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CtrlReq_Ack:
		s := proto.Size(x.Ack)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CtrlReq_InitPayload struct {
	ClusterId            string   `protobuf:"bytes,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CtrlReq_InitPayload) Reset()         { *m = CtrlReq_InitPayload{} }
func (m *CtrlReq_InitPayload) String() string { return proto.CompactTextString(m) }
func (*CtrlReq_InitPayload) ProtoMessage()    {}
func (*CtrlReq_InitPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_02ebc3212cfb52ae, []int{2, 0}
}
func (m *CtrlReq_InitPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CtrlReq_InitPayload.Unmarshal(m, b)
}
func (m *CtrlReq_InitPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CtrlReq_InitPayload.Marshal(b, m, deterministic)
}
func (dst *CtrlReq_InitPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CtrlReq_InitPayload.Merge(dst, src)
}
func (m *CtrlReq_InitPayload) XXX_Size() int {
	return xxx_messageInfo_CtrlReq_InitPayload.Size(m)
}
func (m *CtrlReq_InitPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_CtrlReq_InitPayload.DiscardUnknown(m)
}

var xxx_messageInfo_CtrlReq_InitPayload proto.InternalMessageInfo

func (m *CtrlReq_InitPayload) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

type CtrlReq_AckPayload struct {
	ClusterId            string   `protobuf:"bytes,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	MessageId            string   `protobuf:"bytes,2,opt,name=messageId,proto3" json:"messageId,omitempty"`
	Response             []byte   `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CtrlReq_AckPayload) Reset()         { *m = CtrlReq_AckPayload{} }
func (m *CtrlReq_AckPayload) String() string { return proto.CompactTextString(m) }
func (*CtrlReq_AckPayload) ProtoMessage()    {}
func (*CtrlReq_AckPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_02ebc3212cfb52ae, []int{2, 1}
}
func (m *CtrlReq_AckPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CtrlReq_AckPayload.Unmarshal(m, b)
}
func (m *CtrlReq_AckPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CtrlReq_AckPayload.Marshal(b, m, deterministic)
}
func (dst *CtrlReq_AckPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CtrlReq_AckPayload.Merge(dst, src)
}
func (m *CtrlReq_AckPayload) XXX_Size() int {
	return xxx_messageInfo_CtrlReq_AckPayload.Size(m)
}
func (m *CtrlReq_AckPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_CtrlReq_AckPayload.DiscardUnknown(m)
}

var xxx_messageInfo_CtrlReq_AckPayload proto.InternalMessageInfo

func (m *CtrlReq_AckPayload) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *CtrlReq_AckPayload) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *CtrlReq_AckPayload) GetResponse() []byte {
	if m != nil {
		return m.Response
	}
	return nil
}

type CtrlRes struct {
	// mlisa control message ID
	MessageId string `protobuf:"bytes,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	// mlisa control message content
	Message              []byte   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CtrlRes) Reset()         { *m = CtrlRes{} }
func (m *CtrlRes) String() string { return proto.CompactTextString(m) }
func (*CtrlRes) ProtoMessage()    {}
func (*CtrlRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_02ebc3212cfb52ae, []int{3}
}
func (m *CtrlRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CtrlRes.Unmarshal(m, b)
}
func (m *CtrlRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CtrlRes.Marshal(b, m, deterministic)
}
func (dst *CtrlRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CtrlRes.Merge(dst, src)
}
func (m *CtrlRes) XXX_Size() int {
	return xxx_messageInfo_CtrlRes.Size(m)
}
func (m *CtrlRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CtrlRes.DiscardUnknown(m)
}

var xxx_messageInfo_CtrlRes proto.InternalMessageInfo

func (m *CtrlRes) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *CtrlRes) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func init() {
	proto.RegisterType((*DataMsg)(nil), "DataMsg")
	proto.RegisterType((*DataAck)(nil), "DataAck")
	proto.RegisterType((*CtrlReq)(nil), "CtrlReq")
	proto.RegisterType((*CtrlReq_InitPayload)(nil), "CtrlReq.InitPayload")
	proto.RegisterType((*CtrlReq_AckPayload)(nil), "CtrlReq.AckPayload")
	proto.RegisterType((*CtrlRes)(nil), "CtrlRes")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProxyClient is the client API for Proxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyClient interface {
	ProduceData(ctx context.Context, opts ...grpc.CallOption) (Proxy_ProduceDataClient, error)
	SubcribeCtrlMsg(ctx context.Context, opts ...grpc.CallOption) (Proxy_SubcribeCtrlMsgClient, error)
}

type proxyClient struct {
	cc *grpc.ClientConn
}

func NewProxyClient(cc *grpc.ClientConn) ProxyClient {
	return &proxyClient{cc}
}

func (c *proxyClient) ProduceData(ctx context.Context, opts ...grpc.CallOption) (Proxy_ProduceDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Proxy_serviceDesc.Streams[0], "/Proxy/ProduceData", opts...)
	if err != nil {
		return nil, err
	}
	x := &proxyProduceDataClient{stream}
	return x, nil
}

type Proxy_ProduceDataClient interface {
	Send(*DataMsg) error
	Recv() (*DataAck, error)
	grpc.ClientStream
}

type proxyProduceDataClient struct {
	grpc.ClientStream
}

func (x *proxyProduceDataClient) Send(m *DataMsg) error {
	return x.ClientStream.SendMsg(m)
}

func (x *proxyProduceDataClient) Recv() (*DataAck, error) {
	m := new(DataAck)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *proxyClient) SubcribeCtrlMsg(ctx context.Context, opts ...grpc.CallOption) (Proxy_SubcribeCtrlMsgClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Proxy_serviceDesc.Streams[1], "/Proxy/SubcribeCtrlMsg", opts...)
	if err != nil {
		return nil, err
	}
	x := &proxySubcribeCtrlMsgClient{stream}
	return x, nil
}

type Proxy_SubcribeCtrlMsgClient interface {
	Send(*CtrlReq) error
	Recv() (*CtrlRes, error)
	grpc.ClientStream
}

type proxySubcribeCtrlMsgClient struct {
	grpc.ClientStream
}

func (x *proxySubcribeCtrlMsgClient) Send(m *CtrlReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *proxySubcribeCtrlMsgClient) Recv() (*CtrlRes, error) {
	m := new(CtrlRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ProxyServer is the server API for Proxy service.
type ProxyServer interface {
	ProduceData(Proxy_ProduceDataServer) error
	SubcribeCtrlMsg(Proxy_SubcribeCtrlMsgServer) error
}

func RegisterProxyServer(s *grpc.Server, srv ProxyServer) {
	s.RegisterService(&_Proxy_serviceDesc, srv)
}

func _Proxy_ProduceData_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProxyServer).ProduceData(&proxyProduceDataServer{stream})
}

type Proxy_ProduceDataServer interface {
	Send(*DataAck) error
	Recv() (*DataMsg, error)
	grpc.ServerStream
}

type proxyProduceDataServer struct {
	grpc.ServerStream
}

func (x *proxyProduceDataServer) Send(m *DataAck) error {
	return x.ServerStream.SendMsg(m)
}

func (x *proxyProduceDataServer) Recv() (*DataMsg, error) {
	m := new(DataMsg)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Proxy_SubcribeCtrlMsg_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProxyServer).SubcribeCtrlMsg(&proxySubcribeCtrlMsgServer{stream})
}

type Proxy_SubcribeCtrlMsgServer interface {
	Send(*CtrlRes) error
	Recv() (*CtrlReq, error)
	grpc.ServerStream
}

type proxySubcribeCtrlMsgServer struct {
	grpc.ServerStream
}

func (x *proxySubcribeCtrlMsgServer) Send(m *CtrlRes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *proxySubcribeCtrlMsgServer) Recv() (*CtrlReq, error) {
	m := new(CtrlReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Proxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Proxy",
	HandlerType: (*ProxyServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ProduceData",
			Handler:       _Proxy_ProduceData_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "SubcribeCtrlMsg",
			Handler:       _Proxy_SubcribeCtrlMsg_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "cmd/pb/proxy.proto",
}

func init() { proto.RegisterFile("cmd/pb/proxy.proto", fileDescriptor_proxy_02ebc3212cfb52ae) }

var fileDescriptor_proxy_02ebc3212cfb52ae = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x97, 0xfd, 0xb0, 0xed, 0xab, 0x20, 0xc4, 0x1d, 0x4a, 0xf1, 0x30, 0xea, 0x61, 0xc3,
	0x41, 0x27, 0xf3, 0xe4, 0xb1, 0xd3, 0x83, 0x3b, 0x08, 0xa3, 0xde, 0x04, 0x0f, 0x6d, 0x12, 0x46,
	0xe9, 0xb6, 0xc4, 0x24, 0x05, 0xf7, 0xbf, 0x7b, 0x90, 0xa4, 0xed, 0xaa, 0x82, 0xde, 0xde, 0xf7,
	0xf5, 0xf3, 0xde, 0xeb, 0xfb, 0xbe, 0x00, 0x26, 0x7b, 0xba, 0x10, 0xf9, 0x42, 0x48, 0xfe, 0x71,
	0x8c, 0x85, 0xe4, 0x9a, 0x47, 0xf7, 0xe0, 0x3c, 0x66, 0x3a, 0x7b, 0x56, 0x5b, 0x3c, 0x86, 0x91,
	0xe6, 0xa2, 0x20, 0x01, 0x9a, 0xa0, 0x99, 0x97, 0xd6, 0x02, 0x07, 0xe0, 0xec, 0x99, 0x52, 0xd9,
	0x96, 0x05, 0xfd, 0x09, 0x9a, 0x9d, 0xa7, 0xad, 0x8c, 0xae, 0xeb, 0xd2, 0x84, 0x94, 0x06, 0x52,
	0x15, 0x21, 0x4c, 0x29, 0x5b, 0xec, 0xa6, 0xad, 0x8c, 0x3e, 0x11, 0x38, 0x0f, 0x5a, 0xee, 0x52,
	0xf6, 0x8e, 0x6f, 0x60, 0x58, 0x1c, 0x0a, 0x6d, 0x11, 0x7f, 0x39, 0x8e, 0x9b, 0x7c, 0xbc, 0x3e,
	0x14, 0x7a, 0x93, 0x1d, 0x77, 0x3c, 0xa3, 0x4f, 0xbd, 0xd4, 0x32, 0x78, 0x0a, 0x83, 0x8c, 0x94,
	0x76, 0xa4, 0xbf, 0xbc, 0x3c, 0xa1, 0x09, 0x29, 0x3b, 0xd2, 0x10, 0xe1, 0x1c, 0xfc, 0x6f, 0xf5,
	0xf8, 0x0a, 0x3c, 0xb2, 0xab, 0x94, 0x66, 0x72, 0x4d, 0x9b, 0x45, 0xba, 0x44, 0x48, 0x01, 0xba,
	0x0e, 0xff, 0xb3, 0xe6, 0x6b, 0xb3, 0xe9, 0x9a, 0xda, 0xff, 0xf0, 0xd2, 0x2e, 0x81, 0x43, 0x70,
	0x25, 0x53, 0x82, 0x1f, 0x14, 0x0b, 0x06, 0xd6, 0x97, 0x93, 0x5e, 0x79, 0xe0, 0x88, 0x7a, 0x44,
	0x94, 0xb4, 0xdb, 0xab, 0x9f, 0xfd, 0xd0, 0xef, 0x7e, 0x7f, 0xda, 0xbc, 0x7c, 0x83, 0xd1, 0xc6,
	0x1c, 0x0c, 0x4f, 0xc1, 0xdf, 0x48, 0x4e, 0x2b, 0xc2, 0x8c, 0xed, 0xd8, 0x8d, 0x9b, 0xc3, 0x85,
	0x75, 0x94, 0x90, 0x32, 0xea, 0xcd, 0xd0, 0x2d, 0xc2, 0x73, 0xb8, 0x78, 0xa9, 0x72, 0x22, 0x8b,
	0x9c, 0x99, 0xe1, 0xe6, 0xb6, 0x6e, 0xeb, 0x60, 0xd8, 0x46, 0xaa, 0x86, 0x57, 0xc3, 0xd7, 0xbe,
	0xc8, 0xf3, 0x33, 0xfb, 0x1a, 0xee, 0xbe, 0x02, 0x00, 0x00, 0xff, 0xff, 0xfa, 0x28, 0x4f, 0x45,
	0x23, 0x02, 0x00, 0x00,
}
