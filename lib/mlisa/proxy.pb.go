// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proxy.proto

package mlisa

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DataMsg struct {
	// Name of the topic to produce message to.
	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	// Message body.
	Message              []byte   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataMsg) Reset()         { *m = DataMsg{} }
func (m *DataMsg) String() string { return proto.CompactTextString(m) }
func (*DataMsg) ProtoMessage()    {}
func (*DataMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_364a621d4e61caaa, []int{0}
}
func (m *DataMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataMsg.Unmarshal(m, b)
}
func (m *DataMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataMsg.Marshal(b, m, deterministic)
}
func (dst *DataMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataMsg.Merge(dst, src)
}
func (m *DataMsg) XXX_Size() int {
	return xxx_messageInfo_DataMsg.Size(m)
}
func (m *DataMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_DataMsg.DiscardUnknown(m)
}

var xxx_messageInfo_DataMsg proto.InternalMessageInfo

func (m *DataMsg) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *DataMsg) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

type DataAck struct {
	// Value success is true if the request is successful, otherwise it's false.
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataAck) Reset()         { *m = DataAck{} }
func (m *DataAck) String() string { return proto.CompactTextString(m) }
func (*DataAck) ProtoMessage()    {}
func (*DataAck) Descriptor() ([]byte, []int) {
	return fileDescriptor_proxy_364a621d4e61caaa, []int{1}
}
func (m *DataAck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataAck.Unmarshal(m, b)
}
func (m *DataAck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataAck.Marshal(b, m, deterministic)
}
func (dst *DataAck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataAck.Merge(dst, src)
}
func (m *DataAck) XXX_Size() int {
	return xxx_messageInfo_DataAck.Size(m)
}
func (m *DataAck) XXX_DiscardUnknown() {
	xxx_messageInfo_DataAck.DiscardUnknown(m)
}

var xxx_messageInfo_DataAck proto.InternalMessageInfo

func (m *DataAck) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*DataMsg)(nil), "DataMsg")
	proto.RegisterType((*DataAck)(nil), "DataAck")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ProxyClient is the client API for Proxy service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProxyClient interface {
	ProduceData(ctx context.Context, opts ...grpc.CallOption) (Proxy_ProduceDataClient, error)
}

type proxyClient struct {
	cc *grpc.ClientConn
}

func NewProxyClient(cc *grpc.ClientConn) ProxyClient {
	return &proxyClient{cc}
}

func (c *proxyClient) ProduceData(ctx context.Context, opts ...grpc.CallOption) (Proxy_ProduceDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Proxy_serviceDesc.Streams[0], "/Proxy/ProduceData", opts...)
	if err != nil {
		return nil, err
	}
	x := &proxyProduceDataClient{stream}
	return x, nil
}

type Proxy_ProduceDataClient interface {
	Send(*DataMsg) error
	Recv() (*DataAck, error)
	grpc.ClientStream
}

type proxyProduceDataClient struct {
	grpc.ClientStream
}

func (x *proxyProduceDataClient) Send(m *DataMsg) error {
	return x.ClientStream.SendMsg(m)
}

func (x *proxyProduceDataClient) Recv() (*DataAck, error) {
	m := new(DataAck)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ProxyServer is the server API for Proxy service.
type ProxyServer interface {
	ProduceData(Proxy_ProduceDataServer) error
}

func RegisterProxyServer(s *grpc.Server, srv ProxyServer) {
	s.RegisterService(&_Proxy_serviceDesc, srv)
}

func _Proxy_ProduceData_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProxyServer).ProduceData(&proxyProduceDataServer{stream})
}

type Proxy_ProduceDataServer interface {
	Send(*DataAck) error
	Recv() (*DataMsg, error)
	grpc.ServerStream
}

type proxyProduceDataServer struct {
	grpc.ServerStream
}

func (x *proxyProduceDataServer) Send(m *DataAck) error {
	return x.ServerStream.SendMsg(m)
}

func (x *proxyProduceDataServer) Recv() (*DataMsg, error) {
	m := new(DataMsg)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Proxy_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Proxy",
	HandlerType: (*ProxyServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ProduceData",
			Handler:       _Proxy_ProduceData_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "proxy.proto",
}

func init() { proto.RegisterFile("proxy.proto", fileDescriptor_proxy_364a621d4e61caaa) }

var fileDescriptor_proxy_364a621d4e61caaa = []byte{
	// 156 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x28, 0xca, 0xaf,
	0xa8, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0xb2, 0xe4, 0x62, 0x77, 0x49, 0x2c, 0x49, 0xf4,
	0x2d, 0x4e, 0x17, 0x12, 0xe1, 0x62, 0x2d, 0xc9, 0x2f, 0xc8, 0x4c, 0x96, 0x60, 0x54, 0x60, 0xd4,
	0xe0, 0x0c, 0x82, 0x70, 0x84, 0x24, 0xb8, 0xd8, 0x73, 0x53, 0x8b, 0x8b, 0x13, 0xd3, 0x53, 0x25,
	0x98, 0x14, 0x18, 0x35, 0x78, 0x82, 0x60, 0x5c, 0x25, 0x65, 0x88, 0x56, 0xc7, 0xe4, 0x6c, 0x90,
	0xa2, 0xe2, 0xd2, 0xe4, 0xe4, 0xd4, 0xe2, 0x62, 0xb0, 0x66, 0x8e, 0x20, 0x18, 0xd7, 0xc8, 0x80,
	0x8b, 0x35, 0x00, 0x64, 0x9d, 0x90, 0x3a, 0x17, 0x77, 0x40, 0x51, 0x7e, 0x4a, 0x69, 0x72, 0x2a,
	0x48, 0x93, 0x10, 0x87, 0x1e, 0xd4, 0x5a, 0x29, 0x08, 0xcb, 0x31, 0x39, 0x5b, 0x89, 0x41, 0x83,
	0xd1, 0x80, 0xd1, 0x89, 0x25, 0x8a, 0xa9, 0x20, 0x29, 0x89, 0x0d, 0xec, 0x3c, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xb9, 0xe4, 0xec, 0x3c, 0xad, 0x00, 0x00, 0x00,
}
